<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="approvalMapper">
	<resultMap type="approval" id="approvalBase" extends="reserveHistoryMapper.ReserveHistoryDTO">
		<association property="employeeDTO" javaType="employee" resultMap="employeeMapper.EmployeeDTO"></association>
		<association property="roomDTO" column="room_no" javaType="room" resultMap="roomMapper.roomWithDepartment"></association>
	</resultMap>

	<!-- 성윤: 해당 직원에게 결재가 올라온 에약 목록 조회 -->
	<select id="selectApprovalListByEmpNo" parameterType="string" resultMap="approvalBase">
		SELECT * FROM reserve_history rh 
			JOIN employee e ON rh.reserve_emp_no = e.emp_no
			JOIN room r ON rh.room_no = r.room_no
    		JOIN building b ON r.build_no = b.build_no
		WHERE approval1_emp_no = #{empNo} OR approval2_emp_no = #{empNo}
	</select>
	
	<!-- 성윤: 해당 예약 상세정보 조회 -->
	<select id="selectOneReserveInfo" parameterType="int" resultMap="approvalBase">
		SELECT * FROM reserve_history rh 
			JOIN employee e ON rh.reserve_emp_no = e.emp_no
    		JOIN department d ON e.dept_no = d.dept_no
			JOIN room r ON rh.room_no = r.room_no
    		JOIN building b ON r.build_no = b.build_no
		WHERE reserve_no = #{reserve_no}
	</select>
	
	<!-- 성윤: 해당 예약 주관부서목록 조회 -->
	<select id="selectCompetentDeptartmentList" parameterType="int" resultType="competentDepartment">
		SELECT * FROM competent_department WHERE reserve_no = #{reserve_no}
	</select>
	
	<!-- 성윤: 해당 예약 비품목록 조회 -->
	<select id="selectMeetingEquipmentList" parameterType="int" resultType="equipment">
		SELECT e.eq_name, m.eq_count FROM meeting_equipment_list m
		JOIN room_equipment e ON m.eq_no = e.eq_no
		 WHERE reserve_no = #{reserve_no}
	</select>
	
	<!-- 성윤: 해당 예약 참석자목록 조회 -->
	<select id="selectMeetingMemberList" parameterType="int" resultMap="employeeMapper.employeeWithDepartment">
		SELECT e.*, d.* FROM meeting_member_list m 
		JOIN employee e ON m.emp_no = e.emp_no
		JOIN department d ON e.dept_no = d.dept_no
		WHERE reserve_no = #{reserve_no}
	</select>
	
	<!-- 성윤: 반려 -->
	<update id="refuse" parameterType="map">
	<!--
		UPDATE reserve_history SET ${colName}_yn = 2, ${colName}_date = sysdate, reason = #{reason}
		WHERE reserve_no = #{reserveNo}
	  -->
	   	UPDATE reserve_history SET ${colName}_yn = 2, ${colName}_date = DATE_FORMAT(NOW(), '%Y%m%d'), reason = #{reason}
		WHERE reserve_no = #{reserveNo}
	</update>
	
	<!-- 성윤: 승인 -->
	<update id="approval" parameterType="map">
	<!-- 
		UPDATE reserve_history SET ${colName}_yn = 1, ${colName}_date = sysdate
		WHERE reserve_no = #{reserveNo}
	  -->
	  	UPDATE reserve_history SET ${colName}_yn = 1, ${colName}_date = DATE_FORMAT(NOW(), '%Y%m%d')
		WHERE reserve_no = #{reserveNo}
	</update>
	
	<!-- 성윤: 30분 후 시작하는 예약 목록 확인 -->
	<select id="selectImminentReserveList" parameterType="string" resultMap="approvalBase">
	<!-- 
		SELECT rh.reserve_no  FROM reserve_history rh 
		    JOIN employee e ON rh.reserve_emp_no = e.emp_no
		    JOIN department d ON e.dept_no = d.dept_no
		    JOIN room r ON rh.room_no = r.room_no
		    JOIN building b ON r.build_no = b.build_no
		WHERE TO_CHAR(rh.start_date, 'yyyy/mm/dd hh24:mi') = #{nowTime}
	 -->
	 
	 	SELECT rh.reserve_no  FROM reserve_history rh 
		    JOIN employee e ON rh.reserve_emp_no = e.emp_no
		    JOIN department d ON e.dept_no = d.dept_no
		    JOIN room r ON rh.room_no = r.room_no
		    JOIN building b ON r.build_no = b.build_no
		WHERE DATE_FORMAT(rh.start_date) = #{nowTime}
	</select>
	
	<!-- 성윤: 30분 후 시작하는 예약번호 목록 확인 -->
	<select id="selectImminentReserveList2" parameterType="string" resultType="int">
	<!--
		SELECT reserve_no FROM reserve_history
		WHERE TO_CHAR(start_date, 'yyyy/mm/dd hh24:mi') = #{nowTime}
			AND approval1_yn = 1
			AND approval2_yn = 1
	   -->
	   SELECT reserve_no FROM reserve_history
		WHERE DATE_FORMAT(start_date) = #{nowTime}
			AND approval1_yn = 1
			AND approval2_yn = 1	
	
	</select>
</mapper>